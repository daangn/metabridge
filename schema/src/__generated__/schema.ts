/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type CoreSchemaMetaSchema = {
  $id?: string;
  $schema?: string;
  $ref?: string;
  $comment?: string;
  title?: string;
  description?: string;
  default?: unknown;
  readOnly?: boolean;
  writeOnly?: boolean;
  examples?: unknown[];
  multipleOf?: number;
  maximum?: number;
  exclusiveMaximum?: number;
  minimum?: number;
  exclusiveMinimum?: number;
  maxLength?: number;
  minLength?: number;
  pattern?: string;
  additionalItems?: CoreSchemaMetaSchema;
  items?: CoreSchemaMetaSchema | SchemaArray;
  maxItems?: number;
  minItems?: number;
  uniqueItems?: boolean;
  contains?: CoreSchemaMetaSchema;
  maxProperties?: number;
  minProperties?: number;
  required?: StringArray;
  additionalProperties?: CoreSchemaMetaSchema;
  definitions?: {
    [k: string]: CoreSchemaMetaSchema;
  };
  properties?: {
    [k: string]: CoreSchemaMetaSchema;
  };
  patternProperties?: {
    [k: string]: CoreSchemaMetaSchema;
  };
  dependencies?: {
    [k: string]: CoreSchemaMetaSchema | StringArray;
  };
  propertyNames?: CoreSchemaMetaSchema;
  const?: unknown;
  /**
   * @minItems 1
   */
  enum?: [unknown, ...unknown[]];
  type?:
    | ("array" | "boolean" | "integer" | "null" | "number" | "object" | "string")
    | [
        "array" | "boolean" | "integer" | "null" | "number" | "object" | "string",
        ...("array" | "boolean" | "integer" | "null" | "number" | "object" | "string")[]
      ];
  format?: string;
  contentMediaType?: string;
  contentEncoding?: string;
  if?: CoreSchemaMetaSchema;
  then?: CoreSchemaMetaSchema;
  else?: CoreSchemaMetaSchema;
  allOf?: SchemaArray;
  anyOf?: SchemaArray;
  oneOf?: SchemaArray;
  not?: CoreSchemaMetaSchema;
  [k: string]: unknown;
} & (
  | {
      $id?: string;
      $schema?: string;
      $ref?: string;
      $comment?: string;
      title?: string;
      description?: string;
      default?: unknown;
      readOnly?: boolean;
      writeOnly?: boolean;
      examples?: unknown[];
      multipleOf?: number;
      maximum?: number;
      exclusiveMaximum?: number;
      minimum?: number;
      exclusiveMinimum?: number;
      maxLength?: number;
      minLength?: number;
      pattern?: string;
      additionalItems?: CoreSchemaMetaSchema;
      items?: CoreSchemaMetaSchema | SchemaArray;
      maxItems?: number;
      minItems?: number;
      uniqueItems?: boolean;
      contains?: CoreSchemaMetaSchema;
      maxProperties?: number;
      minProperties?: number;
      required?: StringArray;
      additionalProperties?: CoreSchemaMetaSchema;
      definitions?: {
        [k: string]: CoreSchemaMetaSchema;
      };
      properties?: {
        [k: string]: CoreSchemaMetaSchema;
      };
      patternProperties?: {
        [k: string]: CoreSchemaMetaSchema;
      };
      dependencies?: {
        [k: string]: CoreSchemaMetaSchema | StringArray;
      };
      propertyNames?: CoreSchemaMetaSchema;
      const?: unknown;
      /**
       * @minItems 1
       */
      enum?: [unknown, ...unknown[]];
      type?:
        | ("array" | "boolean" | "integer" | "null" | "number" | "object" | "string")
        | [
            "array" | "boolean" | "integer" | "null" | "number" | "object" | "string",
            ...("array" | "boolean" | "integer" | "null" | "number" | "object" | "string")[]
          ];
      format?: string;
      contentMediaType?: string;
      contentEncoding?: string;
      if?: CoreSchemaMetaSchema;
      then?: CoreSchemaMetaSchema;
      else?: CoreSchemaMetaSchema;
      allOf?: SchemaArray;
      anyOf?: SchemaArray;
      oneOf?: SchemaArray;
      not?: CoreSchemaMetaSchema;
      [k: string]: unknown;
    }
  | boolean
);
/**
 * @minItems 1
 */
export type SchemaArray = [CoreSchemaMetaSchema, ...CoreSchemaMetaSchema[]];
export type StringArray = string[];

export interface Schema {
  $schema: string;
  appName: string;
  queries: {
    [k: string]: {
      operationId: string;
      description: string;
      tag?: string;
      requestBody: CoreSchemaMetaSchema;
      response: CoreSchemaMetaSchema;
      error?: {
        /**
         * @minItems 1
         */
        oneOf: [
          {
            type: "object";
            properties: {
              reason: {
                const: string;
              };
            };
            /**
             * @minItems 1
             * @maxItems 1
             */
            required: ["reason"];
            additionalProperties: false;
          },
          ...{
            type: "object";
            properties: {
              reason: {
                const: string;
              };
            };
            /**
             * @minItems 1
             * @maxItems 1
             */
            required: ["reason"];
            additionalProperties: false;
          }[]
        ];
      };
      minimumSupportAppVersion?: {
        ios: string;
        android: string;
        [k: string]: unknown;
      };
      extra?: {
        [k: string]: unknown;
      };
    };
  };
  subscriptions?: {
    [k: string]: {
      operationId: string;
      description: string;
      tag?: string;
      requestBody: CoreSchemaMetaSchema;
      response: CoreSchemaMetaSchema;
      error?: {
        /**
         * @minItems 1
         */
        oneOf: [
          {
            type: "object";
            properties: {
              reason: {
                const: string;
              };
            };
            /**
             * @minItems 1
             * @maxItems 1
             */
            required: ["reason"];
            additionalProperties: false;
          },
          ...{
            type: "object";
            properties: {
              reason: {
                const: string;
              };
            };
            /**
             * @minItems 1
             * @maxItems 1
             */
            required: ["reason"];
            additionalProperties: false;
          }[]
        ];
      };
      minimumSupportAppVersion?: {
        ios: string;
        android: string;
        [k: string]: unknown;
      };
    };
  };
  $defs?: {
    [k: string]: CoreSchemaMetaSchema;
  };
  $queriesExtraSchema?: {
    [k: string]: CoreSchemaMetaSchema;
  };
}
